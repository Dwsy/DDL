server:
  port: 8701
#  servlet:
#    context-path: /demo

spring:
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
#  jpa:
#    database: postgresql
#    show-sql: true
#    hibernate:
#      ddl-auto: update
#    properties:
#      hibernate:
#        dialect: org.hibernate.dialect.PostgreSQLDialect
#        format_sql: true
#    database-platform: org.hibernate.dialect.PostgreSQLDialect
#    open-in-view: false
#  datasource:
#    # 数据源
#    url: jdbc:postgresql://localhost:5432/ddl?useSSL=false
#    username: postgres
#    password: root
##    type: com.zaxxer.hikari.HikariDataSource
##    driver-class-name: com.mysql.cj.jdbc.Driver
#    driver-class-name: org.postgresql.Driver
#    # 连接池
#    hikari:
#      maximum-pool-size: 8
#      minimum-idle: 4
#      idle-timeout: 30000
#      connection-timeout: 30000
#      max-lifetime: 45000
#      auto-commit: true
#      pool-name: ImoocEcommerceHikariCP

  application:
    name: ddl-demo # 应用名称也是构成 Nacos 配置管理 dataId 字段的一部分 (当 config.prefix 为空时)
  cloud:
    nacos:
      # 服务注册发现
      discovery:
        server-addr: 127.0.0.1:8848
        # server-addr: 127.0.0.1:8848,127.0.0.1:8849,127.0.0.1:8850 # Nacos 服务器地址
        namespace: ec208297-8a8a-4c6a-8771-b02b016c15f4
        metadata:
          management:
            context-path: ${server.servlet.context-path}/actuator
        enabled: true
      # 配置管理
      config:
        prefix: demo
        file-extension: yaml  # 配置内容的数据格式, 默认为 properties
        enabled: true     # 如果不想使用 Nacos 进行配置管理, 设置为 false 即可
#        group: DDL  # 组, 默认为 DEFAULT_GROUP
        namespace: ec208297-8a8a-4c6a-8771-b02b016c15f4
        server-addr: 127.0.0.1:8848
  zipkin:
    sender:
      type: web # 默认是 web
    base-url: http://localhost:9411/
#  zipkin:
#    sender:
#      type: kafka # 默认是 web
#    base-url: http://192.168.123.150:9411/
  main:
    allow-bean-definition-overriding: true  # 因为将来会引入很多依赖, 难免有重名的 bean
knife4j:
  enable: true
#  kafka:
#    bootstrap-servers: 192.168.123.150:9092
#    producer:
#      retries: 3
#    consumer:
#      auto-offset-reset: latest
#  kafka:
#    bootstrap-servers: 127.0.0.1:9092
#    producer:
#      retries: 3
#    consumer:
#      auto-offset-reset: latest
#  sleuth:
#    sampler:
#      # ProbabilityBasedSampler 抽样策略
#      probability: 1.0  # 采样比例, 1.0 表示 100%, 默认是 0.1
#      # RateLimitingSampler 抽样策略, 设置了限速采集, spring.sleuth.sampler.probability 属性值无效
#      rate: 100  # 每秒间隔接受的 trace 量
#  zipkin:
#    sender:
#      type: kafka # 默认是 web
#    base-url: http://localhost:9411/

# Feign 的相关配置
#feign:
#  # feign 开启 gzip 压缩
#  compression:
#    request:
#      enabled: true
#      mime-types: text/xml,application/xml,application/json
#      min-request-size: 1024
#    response:
#      enabled: true
#  # 禁用默认的 http, 启用 okhttp
#  httpclient:
#    enabled: false
#  okhttp:
#    enabled: true
  # OpenFeign 集成 Hystrix

#  hystrix:
#    enabled: true

# 暴露端点
management:
  endpoints:
    web:
      exposure:
        include: '*'  # 需要开放的端点。默认值只打开 health 和 info 两个端点。通过设置 *, 可以开放所有端点
  endpoint:
    health:
      show-details: always
snowflake:
  datacenter-id: 0
  worker-id: 0
