server:
  port: 7007
#  servlet:
#    encoding:
#      charset: utf-8
#      force-response: true
#      force: true
  servlet:
    context-path: /
spring:
  application:
    name: ddl-service-file
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 20MB
  #  multipart:
#    max
#    max-request-size: 20MB
#    max-file-size: 2MB
#  jpa:
#    database: postgresql
#    show-sql: true
#    hibernate:
#      ddl-auto: update
#    properties:
#      hibernate:
#        dialect: org.hibernate.dialect.PostgreSQLDialect
#        format_sql: true
#    database-platform: org.hibernate.dialect.PostgreSQLDialect
#    open-in-view: false
#  datasource:
#    # 数据源
#    url: jdbc:postgresql://localhost:5432/ddl?useSSL=false
#    username: postgres
#    password: root
#    type: com.zaxxer.hikari.HikariDataSource
#    driver-class-name: org.postgresql.Driver
#    hikari:
#      maximum-pool-size: 8
#      minimum-idle: 4
#      idle-timeout: 30000
#      connection-timeout: 30000
#      max-lifetime: 45000
#      auto-commit: true
#      pool-name: DDLHikariCP

  cloud:
    nacos:
      discovery:
#        enabled: false # 如果不想使用 Nacos 进行服务注册和发现, 设置为 false 即可
        enabled: true
        server-addr: localhost:8848 # Nacos 服务器地址
        # server-addr: 127.0.0.1:8848,127.0.0.1:8849,127.0.0.1:8850 # Nacos 服务器地址
        namespace: ec208297-8a8a-4c6a-8771-b02b016c15f4
        metadata:
          management:
#            context-path: ${server.servlet.context-path}/actuator
#            context-path: /actuator




#  kafka:
#    bootstrap-servers: 127.0.0.1:9092
#    producer:
#      retries: 3
#    consumer:
#      auto-offset-reset: latest
#  zipkin:
#    sender:
#      type: kafka # 默认是 web
#    base-url: http://127.0.0.1:9411/

# 暴露端点
#management:
#  endpoints:
#    web:
#      exposure:
#        include: '*'  # 需要开放的端点。默认值只打开 health 和 info 两个端点。通过设置 *, 可以开放所有端点
#  endpoint:
#    health:
#      show-details: always
knife4j:
  enable: true

jasypt:
  encryptor:
    algorithm: PBEWithMD5AndDES
    iv-generator-classname: org.jasypt.iv.NoIvGenerator
    password: ${DDL_SALT}
qiniu:
  accessKey: ENC(lzpY3WxdmvCPoyjxquII/zrtTQeia82RX84cSY0g1nl3ZfZ4m9CyZyBFmGR/BAtptuC4y+M2j48=)
  secretKey: ENC(RaoOOwABD0g96QOungQkYkGR/X93KxHh0ykasWn3jD1eUCFIIkl2I8u6yX2jl6mDteGMJaAl9Yw=)
  bucketName: ENC(1Y/XqbqvJa486wgL/XSAnUzJBrY+ciEE)
  path: ENC(GxN7Gm6LHpzjEtM34Lv6j6syNSpBUPE1)
  documentName: ddl
snowflake:
  datacenter-id: 0
  worker-id: 0